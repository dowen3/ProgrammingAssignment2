x <- 1 2 3
x <- 1 2
x <- 1
msg<- "hello"
x
msg
x <- 1:20
x
x(3)
x
x[3]
x[10]
x
x[11]<-88
x
install.packages("swirl")
library(swirl)
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
getwd()
ls()
x<-9
ls()
dir()
?list.files()
?list.files()
?list.files
args(list.files)
old.dir<-getwd()
dir.create(testdir)
dir.create(testdir)
dir.create(testdir)
getwd()
dir.create(testdir)
info()
dir.create("testdir")
setwd(testdir)
setwd("testdir")
file.create("mytest.R")
ls()
dir()
file.exists()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
args(file.path)
file.path("folder1","folder2")
?dir.create
dir.create("testdir2/testdir3", recursive=TRUE)
dir.create(file.path("testdir2","testdir3"), recursive=TRUE)
unlink("testdir2",recursive=TRUE)
setwd(old.dir)
unlink("testdir", recursive=TRUE)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
my_seq<-seq(0,10,length=30)
my_seq<-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0, times+40)
rep(0, times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect<-c(0.5, 55,-10,6)
tf<-numvect<1
tf<-num_vect<1
tf
num_vect>=6
my_char<-c("My", "name", "is")
my_char
paste(my_char, collapse=" ")
my_name<-c(my_char, "Drew")
my_name
paste(my_char, collapse=" ")
paste(my_name, collapse=" ")
paste("hello", "world", sep = " ")
paste("Hello", "world!", sep = " ")
paste(c("X","Y","Z"),1:3,sep="")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS, 1:4,sep="-")
x<-c(44, NA, 5, NA)
x*3
y<-rnorm(1000)
z<-rep(NA, 1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_data=NA
my_data==NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11, bar =2, norf=NA)
vect
names(vect)
vect<-c(11,2,NA)
vect2<-c(11,2,NA)
names(vect2)<-c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo",bar")]
info()
help
bye()
info()
swirl()
add2<-function(x,y)
{
x+y
}
add2(3,4)
above<-function(x,y){
use<- x>y
x[use]
}
above([2 3 4 5 6 7], 3)
above(c(2 3 4 5 6 7), 3)
d<-[2 3 4 5 6 7]
d<-c(2 3 4 5 6 7)
d <- c(2, 3, 4, 5, 6, 7)
above(d, 3)
above(c(2, 3, 4, 5, 6, 7), 3)
?na.rm
?mean
?is.na
library(datasets)
data("iris")
?iris
iris
mean(iris$Sepal.Length[101:150])
apply(iris, 2, mean)
apply(iris[, 1:4], 2, mean)
libary(datasets)
library(datasets)
data(mtcars)
?mtcars
mtcars
?sapply
sapply(split(mtcars$mpg, mtcars$cyl), mean)
s<-sapply(split(mtcars$hp, mtcars$cyl), mean)
s
s[1]
s[3]-s[1]
?tapply
tapply(iris$Sepal.Length, iris$Species, fun = mean)
tapply(iris$Sepal.Length, iris$Species, fun = mean, simplify= False)
as.factor(iris$Species)
f<-gl(iris$Species, 5)
f<-gl(iris$Species, 3)
tapply(iris$Sepal.Length, iris$Species, fun = mean, simplify= False)
r<-tapply(iris$Sepal.Length, iris$Species, fun = mean, simplify= False)
f<-gl(50, 3)
f<-gl(3, 50)
r<-tapply(iris$Sepal.Length, f, fun = mean, simplify= False)
r
f
r<-tapply(iris, f, fun = mean, simplify= False)
f
tapply(iris, f, fun = mean, simplify= False)
tapply(iris$Sepal.Width, f, fun = mean, simplify= False)
tapply(iris$Sepal.Length, f, fun = mean, simplify= False)
tapply(iris$Sepal.Length, iris$Species, fun = mean, simplify= False)
getwd("")
getwd()
setwd("Data_Science/ProgrammingAssignment2")
source("cachematrix.R")
d<-makeCacheMatrix(matrix(data = c(3,5,6,1),ncol=2,nrow=2))
d$get()
d$getinv
d$getinv()
d
cacheSolve(d$get)
cacheSolve(d)
